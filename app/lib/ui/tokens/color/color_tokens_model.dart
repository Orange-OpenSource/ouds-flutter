import 'package:flutter/cupertino.dart';
import 'package:ouds_flutter_demo/l10n/app_localizations.dart';
import 'package:ouds_flutter_demo/ui/tokens/color/color_screen.dart';
import 'package:ouds_theme_contract/ouds_theme_contract.dart';

class ColorTokensModel {
  final Map<String, List<ColorTokenItem>> _groups;

  ColorTokensModel(this._groups);

  List<ColorTokenItem> operator [](String key) => _groups[key] ?? [];

  Map<String, List<ColorTokenItem>> get all => _groups;

  factory ColorTokensModel.fromTheme(BuildContext context, OudsThemeContract theme) {
    return ColorTokensModel({
      context.l10n.app_tokens_color_action_label: [
        ColorTokenItem(name: 'actionDisabled', value: theme.colorScheme(context).actionDisabled),
        ColorTokenItem(name: 'actionEnabled', value: theme.colorScheme(context).actionEnabled),
        ColorTokenItem(name: 'actionFocus', value: theme.colorScheme(context).actionFocus),
        ColorTokenItem(name: 'actionHighlighted', value: theme.colorScheme(context).actionHighlighted),
        ColorTokenItem(name: 'actionHover', value: theme.colorScheme(context).actionHover),
        ColorTokenItem(name: 'actionLoading', value: theme.colorScheme(context).actionLoading),
        ColorTokenItem(name: 'actionNegativeEnabled', value: theme.colorScheme(context).actionNegativeEnabled),
        ColorTokenItem(name: 'actionNegativeFocus', value: theme.colorScheme(context).actionNegativeFocus),
        ColorTokenItem(name: 'actionNegativeHover', value: theme.colorScheme(context).actionNegativeHover),
        ColorTokenItem(name: 'actionNegativeLoading', value: theme.colorScheme(context).actionNegativeLoading),
        ColorTokenItem(name: 'actionNegativePressed', value: theme.colorScheme(context).actionNegativePressed),
        ColorTokenItem(name: 'actionPressed', value: theme.colorScheme(context).actionPressed),
        ColorTokenItem(name: 'actionSelected', value: theme.colorScheme(context).actionSelected),
        ColorTokenItem(name: 'actionSupportEnabled', value: theme.colorScheme(context).actionSupportEnabled),
        ColorTokenItem(name: 'actionSupportFocus', value: theme.colorScheme(context).actionSupportFocus),
        ColorTokenItem(name: 'actionSupportHover', value: theme.colorScheme(context).actionSupportHover),
        ColorTokenItem(name: 'actionSupportLoading', value: theme.colorScheme(context).actionSupportLoading),
        ColorTokenItem(name: 'actionSupportPressed', value: theme.colorScheme(context).actionSupportPressed),
        ColorTokenItem(name: 'actionVisited', value: theme.colorScheme(context).actionVisited),
      ],
      context.l10n.app_tokens_color_always_label: [
        ColorTokenItem(name: 'alwaysBlack', value: theme.colorScheme(context).alwaysBlack),
        ColorTokenItem(name: 'alwaysOnBlack', value: theme.colorScheme(context).alwaysOnBlack),
        ColorTokenItem(name: 'alwaysOnWhite', value: theme.colorScheme(context).alwaysOnWhite),
        ColorTokenItem(name: 'alwaysWhite', value: theme.colorScheme(context).alwaysWhite),
      ],
      context.l10n.app_tokens_color_background_label: [
        ColorTokenItem(name: 'bgEmphasized', value: theme.colorScheme(context).bgEmphasized),
        ColorTokenItem(name: 'bgPrimary', value: theme.colorScheme(context).bgPrimary),
        ColorTokenItem(name: 'bgSecondary', value: theme.colorScheme(context).bgSecondary),
        ColorTokenItem(name: 'bgTertiary', value: theme.colorScheme(context).bgTertiary),
      ],
      context.l10n.app_tokens_color_border_label: [
        ColorTokenItem(name: 'borderBrandPrimary', value: theme.colorScheme(context).borderBrandPrimary),
        ColorTokenItem(name: 'borderDefault', value: theme.colorScheme(context).borderDefault),
        ColorTokenItem(name: 'borderEmphasized', value: theme.colorScheme(context).borderEmphasized),
        ColorTokenItem(name: 'borderFocus', value: theme.colorScheme(context).borderFocus),
        ColorTokenItem(name: 'borderFocusInset', value: theme.colorScheme(context).borderFocusInset),
        ColorTokenItem(name: 'borderMuted', value: theme.colorScheme(context).borderMuted),
        ColorTokenItem(name: 'borderOnBrandPrimary', value: theme.colorScheme(context).borderOnBrandPrimary),
      ],
      context.l10n.app_tokens_color_content_label: [
        ColorTokenItem(name: 'contentBrandPrimary', value: theme.colorScheme(context).contentBrandPrimary),
        ColorTokenItem(name: 'contentDefault', value: theme.colorScheme(context).contentDefault),
        ColorTokenItem(name: 'contentDisabled', value: theme.colorScheme(context).contentDisabled),
        ColorTokenItem(name: 'contentMuted', value: theme.colorScheme(context).contentMuted),
        ColorTokenItem(name: 'contentOnActionDisabled', value: theme.colorScheme(context).contentOnActionDisabled),
        ColorTokenItem(name: 'contentOnActionEnabled', value: theme.colorScheme(context).contentOnActionEnabled),
        ColorTokenItem(name: 'contentOnActionFocus', value: theme.colorScheme(context).contentOnActionFocus),
        ColorTokenItem(name: 'contentOnActionHighlighted', value: theme.colorScheme(context).contentOnActionHighlighted),
        ColorTokenItem(name: 'contentOnActionHover', value: theme.colorScheme(context).contentOnActionHover),
        ColorTokenItem(name: 'contentOnActionLoading', value: theme.colorScheme(context).contentOnActionLoading),
        ColorTokenItem(name: 'contentOnActionPressed', value: theme.colorScheme(context).contentOnActionPressed),
        ColorTokenItem(name: 'contentOnBrandPrimary', value: theme.colorScheme(context).contentOnBrandPrimary),
        ColorTokenItem(name: 'contentOnOverlayEmphasized', value: theme.colorScheme(context).contentOnOverlayEmphasized),
        ColorTokenItem(name: 'contentOnStatusEmphasized', value: theme.colorScheme(context).contentOnStatusEmphasized),
        ColorTokenItem(name: 'contentOnStatusEmphasizedAlt', value: theme.colorScheme(context).contentOnStatusEmphasizedAlt),
        ColorTokenItem(name: 'contentOnStatusMuted', value: theme.colorScheme(context).contentOnStatusMuted),
        ColorTokenItem(name: 'contentStatusInfo', value: theme.colorScheme(context).contentStatusInfo),
        ColorTokenItem(name: 'contentStatusNegative', value: theme.colorScheme(context).contentStatusNegative),
        ColorTokenItem(name: 'contentStatusPositive', value: theme.colorScheme(context).contentStatusPositive),
        ColorTokenItem(name: 'contentStatusWarning', value: theme.colorScheme(context).contentStatusWarning),
      ],
      context.l10n.app_tokens_color_decorative_label: [
        ColorTokenItem(name: 'decorativeAccent1Default', value: theme.colorScheme(context).decorativeAccent1Default),
        ColorTokenItem(name: 'decorativeAccent1Emphasized', value: theme.colorScheme(context).decorativeAccent1Emphasized),
        ColorTokenItem(name: 'decorativeAccent1Muted', value: theme.colorScheme(context).decorativeAccent1Muted),
        ColorTokenItem(name: 'decorativeAccent2Default', value: theme.colorScheme(context).decorativeAccent2Default),
        ColorTokenItem(name: 'decorativeAccent2Emphasized', value: theme.colorScheme(context).decorativeAccent2Emphasized),
        ColorTokenItem(name: 'decorativeAccent2Muted', value: theme.colorScheme(context).decorativeAccent2Muted),
        ColorTokenItem(name: 'decorativeAccent3Default', value: theme.colorScheme(context).decorativeAccent3Default),
        ColorTokenItem(name: 'decorativeAccent3Emphasized', value: theme.colorScheme(context).decorativeAccent3Emphasized),
        ColorTokenItem(name: 'decorativeAccent3Muted', value: theme.colorScheme(context).decorativeAccent3Muted),
        ColorTokenItem(name: 'decorativeAccent4Default', value: theme.colorScheme(context).decorativeAccent4Default),
        ColorTokenItem(name: 'decorativeAccent4Emphasized', value: theme.colorScheme(context).decorativeAccent4Emphasized),
        ColorTokenItem(name: 'decorativeAccent4Muted', value: theme.colorScheme(context).decorativeAccent4Muted),
        ColorTokenItem(name: 'decorativeAccent5Default', value: theme.colorScheme(context).decorativeAccent5Default),
        ColorTokenItem(name: 'decorativeAccent5Emphasized', value: theme.colorScheme(context).decorativeAccent5Emphasized),
        ColorTokenItem(name: 'decorativeAccent5Muted', value: theme.colorScheme(context).decorativeAccent5Muted),
        ColorTokenItem(name: 'decorativeBrandPrimary', value: theme.colorScheme(context).decorativeBrandPrimary),
        ColorTokenItem(name: 'decorativeBrandSecondary', value: theme.colorScheme(context).decorativeBrandSecondary),
        ColorTokenItem(name: 'decorativeBrandTertiary', value: theme.colorScheme(context).decorativeBrandTertiary),
        ColorTokenItem(name: 'colorDecorativeNeutralEmphasizedHigher', value: theme.colorScheme(context).colorDecorativeNeutralEmphasizedHigher),
        ColorTokenItem(name: 'colorDecorativeNeutralEmphasizedLow', value: theme.colorScheme(context).colorDecorativeNeutralEmphasizedLow),
        ColorTokenItem(name: 'colorDecorativeNeutralEmphasizedLower', value: theme.colorScheme(context).colorDecorativeNeutralEmphasizedLower),
        ColorTokenItem(name: 'colorDecorativeNeutralEmphasizedLowest', value: theme.colorScheme(context).colorDecorativeNeutralEmphasizedLowest),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedHigh', value: theme.colorScheme(context).colorDecorativeNeutralMutedHigh),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedHigher', value: theme.colorScheme(context).colorDecorativeNeutralMutedHigher),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedHighest', value: theme.colorScheme(context).colorDecorativeNeutralMutedHighest),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedLow', value: theme.colorScheme(context).colorDecorativeNeutralMutedLow),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedLower', value: theme.colorScheme(context).colorDecorativeNeutralMutedLower),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedLowest', value: theme.colorScheme(context).colorDecorativeNeutralMutedLowest),
        ColorTokenItem(name: 'colorDecorativeNeutralMutedMedium', value: theme.colorScheme(context).colorDecorativeNeutralMutedMedium),
        ColorTokenItem(name: 'decorativeSkinTint100', value: theme.colorScheme(context).decorativeSkinTint100),
        ColorTokenItem(name: 'decorativeSkinTint200', value: theme.colorScheme(context).decorativeSkinTint200),
        ColorTokenItem(name: 'decorativeSkinTint300', value: theme.colorScheme(context).decorativeSkinTint300),
        ColorTokenItem(name: 'decorativeSkinTint400', value: theme.colorScheme(context).decorativeSkinTint400),
        ColorTokenItem(name: 'decorativeSkinTint500', value: theme.colorScheme(context).decorativeSkinTint500),
        ColorTokenItem(name: 'decorativeSkinTint600', value: theme.colorScheme(context).decorativeSkinTint600),
        ColorTokenItem(name: 'decorativeSkinTint700', value: theme.colorScheme(context).decorativeSkinTint700),
        ColorTokenItem(name: 'decorativeSkinTint800', value: theme.colorScheme(context).decorativeSkinTint800),
        ColorTokenItem(name: 'decorativeSkinTint900', value: theme.colorScheme(context).decorativeSkinTint900),
      ],
      context.l10n.app_tokens_color_overlay_label: [
        ColorTokenItem(name: 'overlayDefault', value: theme.colorScheme(context).overlayDefault),
        ColorTokenItem(name: 'overlayDrag', value: theme.colorScheme(context).overlayDrag),
        ColorTokenItem(name: 'overlayEmphasized', value: theme.colorScheme(context).overlayEmphasized),
        ColorTokenItem(name: 'overlayModal', value: theme.colorScheme(context).overlayModal),
      ],
      context.l10n.app_tokens_color_surface_label: [
        ColorTokenItem(name: 'surfaceBrandPrimary', value: theme.colorScheme(context).surfaceBrandPrimary),
        ColorTokenItem(name: 'surfaceStatusAccentEmphasized', value: theme.colorScheme(context).surfaceStatusAccentEmphasized),
        ColorTokenItem(name: 'surfaceStatusAccentMuted', value: theme.colorScheme(context).surfaceStatusAccentMuted),
        ColorTokenItem(name: 'surfaceStatusInfoEmphasized', value: theme.colorScheme(context).surfaceStatusInfoEmphasized),
        ColorTokenItem(name: 'surfaceStatusInfoMuted', value: theme.colorScheme(context).surfaceStatusInfoMuted),
        ColorTokenItem(name: 'surfaceStatusNegativeEmphasized', value: theme.colorScheme(context).surfaceStatusNegativeEmphasized),
        ColorTokenItem(name: 'surfaceStatusNegativeMuted', value: theme.colorScheme(context).surfaceStatusNegativeMuted),
        ColorTokenItem(name: 'surfaceStatusNeutralEmphasized', value: theme.colorScheme(context).surfaceStatusNeutralEmphasized),
        ColorTokenItem(name: 'surfaceStatusNeutralMuted', value: theme.colorScheme(context).surfaceStatusNeutralMuted),
        ColorTokenItem(name: 'surfaceStatusPositiveEmphasized', value: theme.colorScheme(context).surfaceStatusPositiveEmphasized),
        ColorTokenItem(name: 'surfaceStatusPositiveMuted', value: theme.colorScheme(context).surfaceStatusPositiveMuted),
        ColorTokenItem(name: 'surfaceStatusWarningEmphasized', value: theme.colorScheme(context).surfaceStatusWarningEmphasized),
        ColorTokenItem(name: 'surfaceStatusWarningMuted', value: theme.colorScheme(context).surfaceStatusWarningMuted),
      ],
    });
  }
}
