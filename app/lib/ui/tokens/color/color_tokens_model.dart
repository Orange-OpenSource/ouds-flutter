import 'package:flutter/cupertino.dart';
import 'package:ouds_flutter_demo/l10n/app_localizations.dart';
import 'package:ouds_flutter_demo/ui/tokens/color/color_screen.dart';
import 'package:ouds_theme_contract/ouds_theme_contract.dart';

class ColorTokensModel {
  final Map<String, List<ColorTokenItem>> _groups;

  ColorTokensModel(this._groups);

  List<ColorTokenItem> operator [](String key) => _groups[key] ?? [];

  Map<String, List<ColorTokenItem>> get all => _groups;

  factory ColorTokensModel.fromTheme(BuildContext context, OudsThemeContract theme) {
    return ColorTokensModel({
      context.l10n.app_tokens_color_action_label: [
        ColorTokenItem(name: 'actionDisabled', value: theme.colorScheme(context).actionDisabled),
        ColorTokenItem(name: 'actionEnabled', value: theme.colorScheme(context).actionEnabled),
        ColorTokenItem(name: 'actionFocus', value: theme.colorScheme(context).actionFocus),
        ColorTokenItem(name: 'actionHighlighted', value: theme.colorScheme(context).actionHighlighted),
        ColorTokenItem(name: 'actionHover', value: theme.colorScheme(context).actionHover),
        ColorTokenItem(name: 'actionLoading', value: theme.colorScheme(context).actionLoading),
        ColorTokenItem(name: 'actionNegativeEnabled', value: theme.colorScheme(context).actionNegativeEnabled),
        ColorTokenItem(name: 'actionNegativeFocus', value: theme.colorScheme(context).actionNegativeFocus),
        ColorTokenItem(name: 'actionNegativeHover', value: theme.colorScheme(context).actionNegativeHover),
        ColorTokenItem(name: 'actionNegativeLoading', value: theme.colorScheme(context).actionNegativeLoading),
        ColorTokenItem(name: 'actionNegativePressed', value: theme.colorScheme(context).actionNegativePressed),
        ColorTokenItem(name: 'actionPressed', value: theme.colorScheme(context).actionPressed),
        ColorTokenItem(name: 'actionSelected', value: theme.colorScheme(context).actionSelected),
        ColorTokenItem(name: 'actionSupportEnabled', value: theme.colorScheme(context).actionSupportEnabled),
        ColorTokenItem(name: 'actionSupportFocus', value: theme.colorScheme(context).actionSupportFocus),
        ColorTokenItem(name: 'actionSupportHover', value: theme.colorScheme(context).actionSupportHover),
        ColorTokenItem(name: 'actionSupportLoading', value: theme.colorScheme(context).actionSupportLoading),
        ColorTokenItem(name: 'actionSupportPressed', value: theme.colorScheme(context).actionSupportPressed),
        ColorTokenItem(name: 'actionVisited', value: theme.colorScheme(context).actionVisited),
      ],
      context.l10n.app_tokens_color_always_label: [
        ColorTokenItem(name: 'alwaysBlack', value: theme.colorScheme(context).alwaysBlack),
        ColorTokenItem(name: 'alwaysOnBlack', value: theme.colorScheme(context).alwaysOnBlack),
        ColorTokenItem(name: 'alwaysOnWhite', value: theme.colorScheme(context).alwaysOnWhite),
        ColorTokenItem(name: 'alwaysWhite', value: theme.colorScheme(context).alwaysWhite),
      ],
      context.l10n.app_tokens_color_background_label: [
        ColorTokenItem(name: 'bgEmphasized', value: theme.colorScheme(context).bgEmphasized),
        ColorTokenItem(name: 'bgPrimary', value: theme.colorScheme(context).bgPrimary),
        ColorTokenItem(name: 'bgSecondary', value: theme.colorScheme(context).bgSecondary),
        ColorTokenItem(name: 'bgTertiary', value: theme.colorScheme(context).bgTertiary),
      ],
      context.l10n.app_tokens_color_border_label: [
        ColorTokenItem(name: 'borderBrandPrimary', value: theme.colorScheme(context).borderBrandPrimary),
        ColorTokenItem(name: 'borderBrandSecondary', value: theme.colorScheme(context).borderBrandSecondary),
        ColorTokenItem(name: 'borderBrandTertiary', value: theme.colorScheme(context).borderBrandTertiary),
        ColorTokenItem(name: 'borderDefault', value: theme.colorScheme(context).borderDefault),
        ColorTokenItem(name: 'borderEmphasized', value: theme.colorScheme(context).borderEmphasized),
        ColorTokenItem(name: 'borderFocus', value: theme.colorScheme(context).borderFocus),
        ColorTokenItem(name: 'borderFocusInset', value: theme.colorScheme(context).borderFocusInset),
        ColorTokenItem(name: 'borderMuted', value: theme.colorScheme(context).borderMuted),
        ColorTokenItem(name: 'borderOnBrandPrimary', value: theme.colorScheme(context).borderOnBrandPrimary),
        ColorTokenItem(name: 'borderOnBrandSecondary', value: theme.colorScheme(context).borderOnBrandSecondary),
        ColorTokenItem(name: 'borderOnBrandTertiary', value: theme.colorScheme(context).borderOnBrandTertiary),
      ],
      context.l10n.app_tokens_color_content_label: [
        ColorTokenItem(name: 'contentBrandPrimary', value: theme.colorScheme(context).contentBrandPrimary),
        ColorTokenItem(name: 'contentBrandSecondary', value: theme.colorScheme(context).contentBrandSecondary),
        ColorTokenItem(name: 'contentBrandTertiary', value: theme.colorScheme(context).contentBrandTertiary),
        ColorTokenItem(name: 'contentDefault', value: theme.colorScheme(context).contentDefault),
        ColorTokenItem(name: 'contentDisabled', value: theme.colorScheme(context).contentDisabled),
        ColorTokenItem(name: 'contentMuted', value: theme.colorScheme(context).contentMuted),
        ColorTokenItem(name: 'contentOnActionDisabled', value: theme.colorScheme(context).contentOnActionDisabled),
        ColorTokenItem(name: 'contentOnActionEnabled', value: theme.colorScheme(context).contentOnActionEnabled),
        ColorTokenItem(name: 'contentOnActionFocus', value: theme.colorScheme(context).contentOnActionFocus),
        ColorTokenItem(name: 'contentOnActionHighlighted', value: theme.colorScheme(context).contentOnActionHighlighted),
        ColorTokenItem(name: 'contentOnActionHover', value: theme.colorScheme(context).contentOnActionHover),
        ColorTokenItem(name: 'contentOnActionLoading', value: theme.colorScheme(context).contentOnActionLoading),
        ColorTokenItem(name: 'contentOnActionPressed', value: theme.colorScheme(context).contentOnActionPressed),
        ColorTokenItem(name: 'contentOnActionSelected', value: theme.colorScheme(context).contentOnActionSelected),
        ColorTokenItem(name: 'contentOnBrandPrimary', value: theme.colorScheme(context).contentOnBrandPrimary),
        ColorTokenItem(name: 'contentOnBrandSecondary', value: theme.colorScheme(context).contentOnBrandSecondary),
        ColorTokenItem(name: 'contentOnBrandTertiary', value: theme.colorScheme(context).contentOnBrandTertiary),
        ColorTokenItem(name: 'contentOnOverlayEmphasized', value: theme.colorScheme(context).contentOnOverlayEmphasized),
        ColorTokenItem(name: 'contentOnStatusNeutralEmphasized', value: theme.colorScheme(context).contentOnStatusNeutralEmphasized),
        ColorTokenItem(name: 'contentOnStatusNeutralMuted', value: theme.colorScheme(context).contentOnStatusNeutralMuted),
        ColorTokenItem(name: 'contentOnStatusPositiveEmphasized', value: theme.colorScheme(context).contentOnStatusPositiveEmphasized),
        ColorTokenItem(name: 'contentOnStatusInfoEmphasized', value: theme.colorScheme(context).contentOnStatusInfoEmphasized),
        ColorTokenItem(name: 'contentOnStatusInfoMuted', value: theme.colorScheme(context).contentOnStatusInfoMuted),
        ColorTokenItem(name: 'contentOnStatusNegativeEmphasized', value: theme.colorScheme(context).contentOnStatusNegativeEmphasized),
        ColorTokenItem(name: 'contentOnStatusNegativeMuted', value: theme.colorScheme(context).contentOnStatusNegativeMuted),
        ColorTokenItem(name: 'contentOnStatusAccentEmphasized', value: theme.colorScheme(context).contentOnStatusAccentEmphasized),
        ColorTokenItem(name: 'contentOnStatusAccentMuted', value: theme.colorScheme(context).contentOnStatusAccentMuted),
        ColorTokenItem(name: 'contentStatusAccent', value: theme.colorScheme(context).contentStatusAccent),
        ColorTokenItem(name: 'contentStatusInfo', value: theme.colorScheme(context).contentStatusInfo),
        ColorTokenItem(name: 'contentStatusNegative', value: theme.colorScheme(context).contentStatusNegative),
        ColorTokenItem(name: 'contentStatusPositive', value: theme.colorScheme(context).contentStatusPositive),
        ColorTokenItem(name: 'contentStatusWarning', value: theme.colorScheme(context).contentStatusWarning),
      ],
      context.l10n.app_tokens_color_decorative_label: [
        ColorTokenItem(name: 'decorativeAccent1Default', value: theme.colorScheme(context).decorativeAccent1Default),
        ColorTokenItem(name: 'decorativeAccent1Emphasized', value: theme.colorScheme(context).decorativeAccent1Emphasized),
        ColorTokenItem(name: 'decorativeAccent1Muted', value: theme.colorScheme(context).decorativeAccent1Muted),
        ColorTokenItem(name: 'decorativeAccent2Default', value: theme.colorScheme(context).decorativeAccent2Default),
        ColorTokenItem(name: 'decorativeAccent2Emphasized', value: theme.colorScheme(context).decorativeAccent2Emphasized),
        ColorTokenItem(name: 'decorativeAccent2Muted', value: theme.colorScheme(context).decorativeAccent2Muted),
        ColorTokenItem(name: 'decorativeAccent3Default', value: theme.colorScheme(context).decorativeAccent3Default),
        ColorTokenItem(name: 'decorativeAccent3Emphasized', value: theme.colorScheme(context).decorativeAccent3Emphasized),
        ColorTokenItem(name: 'decorativeAccent3Muted', value: theme.colorScheme(context).decorativeAccent3Muted),
        ColorTokenItem(name: 'decorativeAccent4Default', value: theme.colorScheme(context).decorativeAccent4Default),
        ColorTokenItem(name: 'decorativeAccent4Emphasized', value: theme.colorScheme(context).decorativeAccent4Emphasized),
        ColorTokenItem(name: 'decorativeAccent4Muted', value: theme.colorScheme(context).decorativeAccent4Muted),
        ColorTokenItem(name: 'decorativeAccent5Default', value: theme.colorScheme(context).decorativeAccent5Default),
        ColorTokenItem(name: 'decorativeAccent5Emphasized', value: theme.colorScheme(context).decorativeAccent5Emphasized),
        ColorTokenItem(name: 'decorativeAccent5Muted', value: theme.colorScheme(context).decorativeAccent5Muted),
        ColorTokenItem(name: 'decorativeBrandPrimary', value: theme.colorScheme(context).decorativeBrandPrimary),
        ColorTokenItem(name: 'decorativeBrandSecondary', value: theme.colorScheme(context).decorativeBrandSecondary),
        ColorTokenItem(name: 'decorativeBrandTertiary', value: theme.colorScheme(context).decorativeBrandTertiary),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedHigh', value: theme.colorScheme(context).decorativeNeutralEmphasizedHigh),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedHigher', value: theme.colorScheme(context).decorativeNeutralEmphasizedHigher),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedHighest', value: theme.colorScheme(context).decorativeNeutralEmphasizedHighest),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedLow', value: theme.colorScheme(context).decorativeNeutralEmphasizedLow),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedLower', value: theme.colorScheme(context).decorativeNeutralEmphasizedLower),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedLowest', value: theme.colorScheme(context).decorativeNeutralEmphasizedLowest),
        ColorTokenItem(name: 'decorativeNeutralEmphasizedMedium', value: theme.colorScheme(context).decorativeNeutralEmphasizedMedium),
        ColorTokenItem(name: 'decorativeNeutralMutedHigh', value: theme.colorScheme(context).decorativeNeutralMutedHigh),
        ColorTokenItem(name: 'decorativeNeutralMutedHigher', value: theme.colorScheme(context).decorativeNeutralMutedHigher),
        ColorTokenItem(name: 'decorativeNeutralMutedHighest', value: theme.colorScheme(context).decorativeNeutralMutedHighest),
        ColorTokenItem(name: 'decorativeNeutralMutedLower', value: theme.colorScheme(context).decorativeNeutralMutedLower),
        ColorTokenItem(name: 'decorativeNeutralMutedLowest', value: theme.colorScheme(context).decorativeNeutralMutedLowest),
        ColorTokenItem(name: 'decorativeNeutralMutedLow', value: theme.colorScheme(context).decorativeNeutralMutedLow),
        ColorTokenItem(name: 'decorativeNeutralMutedMedium', value: theme.colorScheme(context).decorativeNeutralMutedMedium),
        ColorTokenItem(name: 'decorativeSkinTint100', value: theme.colorScheme(context).decorativeSkinTint100),
        ColorTokenItem(name: 'decorativeSkinTint200', value: theme.colorScheme(context).decorativeSkinTint200),
        ColorTokenItem(name: 'decorativeSkinTint300', value: theme.colorScheme(context).decorativeSkinTint300),
        ColorTokenItem(name: 'decorativeSkinTint400', value: theme.colorScheme(context).decorativeSkinTint400),
        ColorTokenItem(name: 'decorativeSkinTint500', value: theme.colorScheme(context).decorativeSkinTint500),
        ColorTokenItem(name: 'decorativeSkinTint600', value: theme.colorScheme(context).decorativeSkinTint600),
        ColorTokenItem(name: 'decorativeSkinTint700', value: theme.colorScheme(context).decorativeSkinTint700),
        ColorTokenItem(name: 'decorativeSkinTint800', value: theme.colorScheme(context).decorativeSkinTint800),
        ColorTokenItem(name: 'decorativeSkinTint900', value: theme.colorScheme(context).decorativeSkinTint900),
      ],
      context.l10n.app_tokens_color_overlay_label: [
        ColorTokenItem(name: 'overlayDefault', value: theme.colorScheme(context).overlayDefault),
        ColorTokenItem(name: 'overlayDrag', value: theme.colorScheme(context).overlayDrag),
        ColorTokenItem(name: 'overlayEmphasized', value: theme.colorScheme(context).overlayEmphasized),
        ColorTokenItem(name: 'overlayModal', value: theme.colorScheme(context).overlayModal),
      ],
      context.l10n.app_tokens_color_repository_label: [
        ColorTokenItem(name: 'repositoryAccentDefault', value: theme.colorScheme(context).repositoryAccentDefault),
        ColorTokenItem(name: 'repositoryAccentHighest', value: theme.colorScheme(context).repositoryAccentHighest),
        ColorTokenItem(name: 'repositoryAccentLow', value: theme.colorScheme(context).repositoryAccentLow),
        ColorTokenItem(name: 'repositoryAccentLowest', value: theme.colorScheme(context).repositoryAccentLowest),
        ColorTokenItem(name: 'repositoryInfoDefault', value: theme.colorScheme(context).repositoryInfoDefault),
        ColorTokenItem(name: 'repositoryInfoHighest', value: theme.colorScheme(context).repositoryInfoHighest),
        ColorTokenItem(name: 'repositoryInfoLow', value: theme.colorScheme(context).repositoryInfoLow),
        ColorTokenItem(name: 'repositoryInfoLowest', value: theme.colorScheme(context).repositoryInfoLowest),
        ColorTokenItem(name: 'repositoryNegativeDefault', value: theme.colorScheme(context).repositoryNegativeDefault),
        ColorTokenItem(name: 'repositoryNegativeHigh', value: theme.colorScheme(context).repositoryNegativeHigh),
        ColorTokenItem(name: 'repositoryNegativeHigher', value: theme.colorScheme(context).repositoryNegativeHigher),
        ColorTokenItem(name: 'repositoryNegativeHighest', value: theme.colorScheme(context).repositoryNegativeHighest),
        ColorTokenItem(name: 'repositoryNegativeLow', value: theme.colorScheme(context).repositoryNegativeLow),
        ColorTokenItem(name: 'repositoryNegativeLower', value: theme.colorScheme(context).repositoryNegativeLower),
        ColorTokenItem(name: 'repositoryNegativeLowest', value: theme.colorScheme(context).repositoryNegativeLowest),
        ColorTokenItem(name: 'repositoryNeutralEmphasizedBlack', value: theme.colorScheme(context).repositoryNeutralEmphasizedBlack),
        ColorTokenItem(name: 'repositoryNeutralEmphasizedHigh', value: theme.colorScheme(context).repositoryNeutralEmphasizedHigh),
        ColorTokenItem(name: 'repositoryNeutralEmphasizedHigher', value: theme.colorScheme(context).repositoryNeutralEmphasizedHigher),
        ColorTokenItem(name: 'repositoryNeutralEmphasizedHighest', value: theme.colorScheme(context).repositoryNeutralEmphasizedHighest),
        ColorTokenItem(name: 'repositoryNeutralEmphasizedMedium', value: theme.colorScheme(context).repositoryNeutralEmphasizedMedium),
        ColorTokenItem(name: 'repositoryNeutralMutedLower', value: theme.colorScheme(context).repositoryNeutralMutedLower),
        ColorTokenItem(name: 'repositoryNeutralMutedLowest', value: theme.colorScheme(context).repositoryNeutralMutedLowest),
        ColorTokenItem(name: 'repositoryNeutralMutedWhite', value: theme.colorScheme(context).repositoryNeutralMutedWhite),
        ColorTokenItem(name: 'repositoryOpacityBlackHigh', value: theme.colorScheme(context).repositoryOpacityBlackHigh),
        ColorTokenItem(name: 'repositoryOpacityBlackHigher', value: theme.colorScheme(context).repositoryOpacityBlackHigher),
        ColorTokenItem(name: 'repositoryOpacityBlackHighest', value: theme.colorScheme(context).repositoryOpacityBlackHighest),
        ColorTokenItem(name: 'repositoryOpacityBlackLow', value: theme.colorScheme(context).repositoryOpacityBlackLow),
        ColorTokenItem(name: 'repositoryOpacityBlackLower', value: theme.colorScheme(context).repositoryOpacityBlackLower),
        ColorTokenItem(name: 'repositoryOpacityBlackLowest', value: theme.colorScheme(context).repositoryOpacityBlackLowest),
        ColorTokenItem(name: 'repositoryOpacityBlackMedium', value: theme.colorScheme(context).repositoryOpacityBlackMedium),
        ColorTokenItem(name: 'repositoryOpacityBlackMediumLow', value: theme.colorScheme(context).repositoryOpacityBlackMediumLow),
        ColorTokenItem(name: 'repositoryOpacityBlackMediumHigh', value: theme.colorScheme(context).repositoryOpacityBlackMediumHigh),
        ColorTokenItem(name: 'repositoryOpacityBlackTransparent', value: theme.colorScheme(context).repositoryOpacityBlackTransparent),
        ColorTokenItem(name: 'repositoryOpacityInfo', value: theme.colorScheme(context).repositoryOpacityInfo),
        ColorTokenItem(name: 'repositoryOpacityNegative', value: theme.colorScheme(context).repositoryOpacityNegative),
        ColorTokenItem(name: 'repositoryOpacityPositive', value: theme.colorScheme(context).repositoryOpacityPositive),
        ColorTokenItem(name: 'repositoryOpacityWarning', value: theme.colorScheme(context).repositoryOpacityWarning),
        ColorTokenItem(name: 'repositoryOpacityWhiteHigh', value: theme.colorScheme(context).repositoryOpacityWhiteHigh),
        ColorTokenItem(name: 'repositoryOpacityWhiteHigher', value: theme.colorScheme(context).repositoryOpacityWhiteHigher),
        ColorTokenItem(name: 'repositoryOpacityWhiteHighest', value: theme.colorScheme(context).repositoryOpacityWhiteHighest),
        ColorTokenItem(name: 'repositoryOpacityWhiteMedium', value: theme.colorScheme(context).repositoryOpacityWhiteMedium),
        ColorTokenItem(name: 'repositoryOpacityWhiteMediumLow', value: theme.colorScheme(context).repositoryOpacityWhiteMediumLow),
        ColorTokenItem(name: 'repositoryOpacityWhiteLow', value: theme.colorScheme(context).repositoryOpacityWhiteLow),
        ColorTokenItem(name: 'repositoryOpacityWhiteLower', value: theme.colorScheme(context).repositoryOpacityWhiteLower),
        ColorTokenItem(name: 'repositoryOpacityWhiteLowest', value: theme.colorScheme(context).repositoryOpacityWhiteLowest),
        ColorTokenItem(name: 'repositoryOpacityWhiteTransparent', value: theme.colorScheme(context).repositoryOpacityWhiteTransparent),
        ColorTokenItem(name: 'repositoryPositiveDefault', value: theme.colorScheme(context).repositoryPositiveDefault),
        ColorTokenItem(name: 'repositoryPositiveHigh', value: theme.colorScheme(context).repositoryPositiveHigh),
        ColorTokenItem(name: 'repositoryPositiveHighest', value: theme.colorScheme(context).repositoryPositiveHighest),
        ColorTokenItem(name: 'repositoryPositiveLow', value: theme.colorScheme(context).repositoryPositiveLow),
        ColorTokenItem(name: 'repositoryPositiveLowest', value: theme.colorScheme(context).repositoryPositiveLowest),
        ColorTokenItem(name: 'repositoryPrimaryDefault', value: theme.colorScheme(context).repositoryPrimaryDefault),
        ColorTokenItem(name: 'repositoryPrimaryLow', value: theme.colorScheme(context).repositoryPrimaryLow),
        ColorTokenItem(name: 'repositoryWarningDefault', value: theme.colorScheme(context).repositoryWarningDefault),
        ColorTokenItem(name: 'repositoryWarningHighest', value: theme.colorScheme(context).repositoryWarningHighest),
        ColorTokenItem(name: 'repositoryWarningLow', value: theme.colorScheme(context).repositoryWarningLow),
        ColorTokenItem(name: 'repositoryWarningLowest', value: theme.colorScheme(context).repositoryWarningLowest),
      ],
      context.l10n.app_tokens_color_surface_label: [
        ColorTokenItem(name: 'surfaceBrandPrimary', value: theme.colorScheme(context).surfaceBrandPrimary),
        ColorTokenItem(name: 'surfaceStatusAccentEmphasized', value: theme.colorScheme(context).surfaceStatusAccentEmphasized),
        ColorTokenItem(name: 'surfaceStatusAccentMuted', value: theme.colorScheme(context).surfaceStatusAccentMuted),
        ColorTokenItem(name: 'surfaceStatusInfoEmphasized', value: theme.colorScheme(context).surfaceStatusInfoEmphasized),
        ColorTokenItem(name: 'surfaceStatusInfoMuted', value: theme.colorScheme(context).surfaceStatusInfoMuted),
        ColorTokenItem(name: 'surfaceStatusNegativeEmphasized', value: theme.colorScheme(context).surfaceStatusNegativeEmphasized),
        ColorTokenItem(name: 'surfaceStatusNegativeMuted', value: theme.colorScheme(context).surfaceStatusNegativeMuted),
        ColorTokenItem(name: 'surfaceStatusNeutralEmphasized', value: theme.colorScheme(context).surfaceStatusNeutralEmphasized),
        ColorTokenItem(name: 'surfaceStatusNeutralMuted', value: theme.colorScheme(context).surfaceStatusNeutralMuted),
        ColorTokenItem(name: 'surfaceStatusPositiveEmphasized', value: theme.colorScheme(context).surfaceStatusPositiveEmphasized),
        ColorTokenItem(name: 'surfaceStatusPositiveMuted', value: theme.colorScheme(context).surfaceStatusPositiveMuted),
        ColorTokenItem(name: 'surfaceStatusWarningEmphasized', value: theme.colorScheme(context).surfaceStatusWarningEmphasized),
        ColorTokenItem(name: 'surfaceStatusWarningMuted', value: theme.colorScheme(context).surfaceStatusWarningMuted),
      ],
    });
  }
}
