import 'package:ouds_theme_contract/ouds_theme_contract.dart';

import 'color_screen.dart';

class ThemeColorTokens {
  final Map<String, List<ColorTokenItem>> _groups;

  ThemeColorTokens(this._groups);

  List<ColorTokenItem> operator [](String key) => _groups[key] ?? [];

  Map<String, List<ColorTokenItem>> get all => _groups;

  factory ThemeColorTokens.fromTheme(OudsThemeContract theme) {
    return ThemeColorTokens({
      'Action': [
        ColorTokenItem(name: 'disabled', value: theme.colorsScheme.actionDisabled),
        ColorTokenItem(name: 'enabled', value: theme.colorsScheme.actionEnabled),
        ColorTokenItem(name: 'focus', value: theme.colorsScheme.actionFocus),
        ColorTokenItem(name: 'highlighted', value: theme.colorsScheme.actionHighlighted),
        ColorTokenItem(name: 'hover', value: theme.colorsScheme.actionHover),
        ColorTokenItem(name: 'loading', value: theme.colorsScheme.actionLoading),
        ColorTokenItem(name: 'negative.enabled', value: theme.colorsScheme.actionNegativeEnabled),
        ColorTokenItem(name: 'negative.focus', value: theme.colorsScheme.actionNegativeFocus),
        ColorTokenItem(name: 'negative.hover', value: theme.colorsScheme.actionNegativeHover),
        ColorTokenItem(name: 'negative.loading', value: theme.colorsScheme.actionNegativeLoading),
        ColorTokenItem(name: 'negative.pressed', value: theme.colorsScheme.actionNegativePressed),
        ColorTokenItem(name: 'pressed', value: theme.colorsScheme.actionPressed),
        ColorTokenItem(name: 'selected', value: theme.colorsScheme.actionSelected),
        ColorTokenItem(name: 'support.enabled', value: theme.colorsScheme.actionSupportEnabled),
        ColorTokenItem(name: 'support.focus', value: theme.colorsScheme.actionSupportFocus),
        ColorTokenItem(name: 'support.hover', value: theme.colorsScheme.actionSupportHover),
        ColorTokenItem(name: 'support.loading', value: theme.colorsScheme.actionSupportLoading),
        ColorTokenItem(name: 'support.pressed', value: theme.colorsScheme.actionSupportPressed),
        ColorTokenItem(name: 'visited', value: theme.colorsScheme.actionVisited),
      ],
      'Always': [
        ColorTokenItem(name: 'black', value: theme.colorsScheme.alwaysBlack),
        ColorTokenItem(name: 'onBlack', value: theme.colorsScheme.alwaysOnBlack),
        ColorTokenItem(name: 'onWhite', value: theme.colorsScheme.alwaysOnWhite),
        ColorTokenItem(name: 'white', value: theme.colorsScheme.alwaysWhite),
      ],
      'Background': [
        ColorTokenItem(name: 'emphasized', value: theme.colorsScheme.bgEmphasized),
        ColorTokenItem(name: 'primary', value: theme.colorsScheme.bgPrimary),
        ColorTokenItem(name: 'secondary', value: theme.colorsScheme.bgSecondary),
        ColorTokenItem(name: 'tertiary', value: theme.colorsScheme.bgTertiary),
      ],
      'Border': [
        ColorTokenItem(name: 'brandPrimary', value: theme.colorsScheme.borderBrandPrimary),
        ColorTokenItem(name: 'default', value: theme.colorsScheme.borderDefault),
        ColorTokenItem(name: 'emphasized', value: theme.colorsScheme.borderEmphasized),
        ColorTokenItem(name: 'focus', value: theme.colorsScheme.borderFocus),
        ColorTokenItem(name: 'focusInset', value: theme.colorsScheme.borderFocusInset),
        ColorTokenItem(name: 'muted', value: theme.colorsScheme.borderMuted),
        ColorTokenItem(name: 'onBrand.primary', value: theme.colorsScheme.borderOnBrandPrimary),
      ],
      'Content': [
        ColorTokenItem(name: 'brandPrimary', value: theme.colorsScheme.contentBrandPrimary),
        ColorTokenItem(name: 'default', value: theme.colorsScheme.contentDefault),
        ColorTokenItem(name: 'disabled', value: theme.colorsScheme.contentDisabled),
        ColorTokenItem(name: 'muted', value: theme.colorsScheme.contentMuted),
        ColorTokenItem(name: 'onAction.disabled', value: theme.colorsScheme.contentOnActionDisabled),
        ColorTokenItem(name: 'onAction.enabled', value: theme.colorsScheme.contentOnActionEnabled),
        ColorTokenItem(name: 'onAction.focus', value: theme.colorsScheme.contentOnActionFocus),
        ColorTokenItem(name: 'onAction.highlighted', value: theme.colorsScheme.contentOnActionHighlighted),
        ColorTokenItem(name: 'onAction.hover', value: theme.colorsScheme.contentOnActionHover),
        ColorTokenItem(name: 'onAction.loading', value: theme.colorsScheme.contentOnActionLoading),
        ColorTokenItem(name: 'onAction.pressed', value: theme.colorsScheme.contentOnActionPressed),
        ColorTokenItem(name: 'onBrand.primary', value: theme.colorsScheme.contentOnBrandPrimary),
        ColorTokenItem(name: 'onOverlay.emphasized', value: theme.colorsScheme.contentOnOverlayEmphasized),
        ColorTokenItem(name: 'onStatus.emphasized', value: theme.colorsScheme.contentOnStatusEmphasized),
        ColorTokenItem(name: 'onStatus.emphasizedAlt', value: theme.colorsScheme.contentOnStatusEmphasizedAlt),
        ColorTokenItem(name: 'onStatus.muted', value: theme.colorsScheme.contentOnStatusMuted),
        ColorTokenItem(name: 'status.info', value: theme.colorsScheme.contentStatusInfo),
        ColorTokenItem(name: 'status.negative', value: theme.colorsScheme.contentStatusNegative),
        ColorTokenItem(name: 'status.positive', value: theme.colorsScheme.contentStatusPositive),
        ColorTokenItem(name: 'status.warning', value: theme.colorsScheme.contentStatusWarning),
      ],
      'Decorative': [ ColorTokenItem(name: 'accent1.default', value: theme.colorsScheme.decorativeAccent1Default),
        ColorTokenItem(name: 'accent1.emphasized', value: theme.colorsScheme.decorativeAccent1Emphasized),
        ColorTokenItem(name: 'accent1.muted', value: theme.colorsScheme.decorativeAccent1Muted),
        ColorTokenItem(name: 'accent2.default', value: theme.colorsScheme.decorativeAccent2Default),
        ColorTokenItem(name: 'accent2.emphasized', value: theme.colorsScheme.decorativeAccent2Emphasized),
        ColorTokenItem(name: 'accent2.muted', value: theme.colorsScheme.decorativeAccent2Muted),
        ColorTokenItem(name: 'accent3.default', value: theme.colorsScheme.decorativeAccent3Default),
        ColorTokenItem(name: 'accent3.emphasized', value: theme.colorsScheme.decorativeAccent3Emphasized),
        ColorTokenItem(name: 'accent3.muted', value: theme.colorsScheme.decorativeAccent3Muted),
        ColorTokenItem(name: 'accent4.default', value: theme.colorsScheme.decorativeAccent4Default),
        ColorTokenItem(name: 'accent4.emphasized', value: theme.colorsScheme.decorativeAccent4Emphasized),
        ColorTokenItem(name: 'accent4.muted', value: theme.colorsScheme.decorativeAccent4Muted),
        ColorTokenItem(name: 'accent5.default', value: theme.colorsScheme.decorativeAccent5Default),
        ColorTokenItem(name: 'accent5.emphasized', value: theme.colorsScheme.decorativeAccent5Emphasized),
        ColorTokenItem(name: 'accent5.muted', value: theme.colorsScheme.decorativeAccent5Muted),
        ColorTokenItem(name: 'brand.primary', value: theme.colorsScheme.decorativeBrandPrimary),
        ColorTokenItem(name: 'brand.secondary', value: theme.colorsScheme.decorativeBrandSecondary),
        ColorTokenItem(name: 'brand.tertiary', value: theme.colorsScheme.decorativeBrandTertiary),
        ColorTokenItem(name: 'neutral.emphasized.higher', value: theme.colorsScheme.colorDecorativeNeutralEmphasizedHigher),
        ColorTokenItem(name: 'neutral.emphasized.low', value: theme.colorsScheme.colorDecorativeNeutralEmphasizedLow),
        ColorTokenItem(name: 'neutral.emphasized.lower', value: theme.colorsScheme.colorDecorativeNeutralEmphasizedLower),
        ColorTokenItem(name: 'neutral.emphasized.lowest', value: theme.colorsScheme.colorDecorativeNeutralEmphasizedLowest),
        ColorTokenItem(name: 'neutral.muted.high', value: theme.colorsScheme.colorDecorativeNeutralMutedHigh),
        ColorTokenItem(name: 'neutral.muted.higher', value: theme.colorsScheme.colorDecorativeNeutralMutedHigher),
        ColorTokenItem(name: 'neutral.muted.highest', value: theme.colorsScheme.colorDecorativeNeutralMutedHighest),
        ColorTokenItem(name: 'neutral.muted.low', value: theme.colorsScheme.colorDecorativeNeutralMutedLow),
        ColorTokenItem(name: 'neutral.muted.lower', value: theme.colorsScheme.colorDecorativeNeutralMutedLower),
        ColorTokenItem(name: 'neutral.muted.lowest', value: theme.colorsScheme.colorDecorativeNeutralMutedLowest),
        ColorTokenItem(name: 'neutral.muted.medium', value: theme.colorsScheme.colorDecorativeNeutralMutedMedium),
        ColorTokenItem(name: 'skin.tint100', value: theme.colorsScheme.decorativeSkinTint100),
        ColorTokenItem(name: 'skin.tint200', value: theme.colorsScheme.decorativeSkinTint200),
        ColorTokenItem(name: 'skin.tint300', value: theme.colorsScheme.decorativeSkinTint300),
        ColorTokenItem(name: 'skin.tint400', value: theme.colorsScheme.decorativeSkinTint400),
        ColorTokenItem(name: 'skin.tint500', value: theme.colorsScheme.decorativeSkinTint500),
        ColorTokenItem(name: 'skin.tint600', value: theme.colorsScheme.decorativeSkinTint600),
        ColorTokenItem(name: 'skin.tint700', value: theme.colorsScheme.decorativeSkinTint700),
        ColorTokenItem(name: 'skin.tint800', value: theme.colorsScheme.decorativeSkinTint800),
        ColorTokenItem(name: 'skin.tint900', value: theme.colorsScheme.decorativeSkinTint900)],
      'Overlay': [
        ColorTokenItem(name: 'default', value: theme.colorsScheme.overlayDefault),
        ColorTokenItem(name: 'drag', value: theme.colorsScheme.overlayDrag),
        ColorTokenItem(name: 'emphasized', value: theme.colorsScheme.overlayEmphasized),
        ColorTokenItem(name: 'modal', value: theme.colorsScheme.overlayModal)
      ],
      'Surface': [
        ColorTokenItem(name: 'disabled', value: theme.colorsScheme.surfaceBrandPrimary),
        ColorTokenItem(name: 'enabled', value: theme.colorsScheme.surfaceStatusAccentEmphasized),
        ColorTokenItem(name: 'focus', value: theme.colorsScheme.surfaceStatusAccentMuted),
        ColorTokenItem(name: 'highlighted', value: theme.colorsScheme.surfaceStatusInfoEmphasized),
        ColorTokenItem(name: 'hover', value: theme.colorsScheme.surfaceStatusInfoMuted),
        ColorTokenItem(name: 'loading', value: theme.colorsScheme.surfaceStatusNegativeEmphasized),
        ColorTokenItem(name: 'negative.enabled', value: theme.colorsScheme.surfaceStatusNegativeMuted),
        ColorTokenItem(name: 'negative.focus', value: theme.colorsScheme.surfaceStatusNeutralEmphasized),
        ColorTokenItem(name: 'negative.hover', value: theme.colorsScheme.surfaceStatusNeutralMuted),
        ColorTokenItem(name: 'negative.loading', value: theme.colorsScheme.surfaceStatusPositiveEmphasized),
        ColorTokenItem(name: 'negative.pressed', value: theme.colorsScheme.surfaceStatusPositiveMuted),
        ColorTokenItem(name: 'pressed', value: theme.colorsScheme.surfaceStatusWarningEmphasized),
        ColorTokenItem(name: 'selected', value: theme.colorsScheme.surfaceStatusWarningMuted)
      ],
    });
  }
}
