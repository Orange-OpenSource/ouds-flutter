# Sample workflow for building and deploying a Dartdoc site to GitHub Pages
name: Deploy Dartdoc with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "13-distribute-demo-app-for-validation" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.5
      - name: Build with Dartdoc
        run: |
          cd library
          dart pub get
          dart doc .  
      - name: Move DartDoc output
        run: |
          mkdir -p .docs
          mv library/doc/api .docs/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
