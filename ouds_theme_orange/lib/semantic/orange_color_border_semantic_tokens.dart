//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

import 'package:ouds_theme_contract/theme/tokens/semantic/ouds_color_border_semantic_tokens.dart';

class OrangeColorBorderSemanticTokens extends OudsColorBorderSemanticTokens {
  const OrangeColorBorderSemanticTokens({
    super.borderDefaultLight = ColorRawTokens.colorOpacityBlack200,
    super.borderDefaultDark = ColorRawTokens.colorOpacityWhite200,
    super.borderMutedLight = ColorRawTokens.colorOpacityBlack80,
    super.borderMutedDark = ColorRawTokens.colorOpacityWhite80,
    super.borderEmphasizedLight = ColorRawTokens.colorFunctionalBlack,
    super.borderEmphasizedDark = ColorRawTokens.colorOpacityWhite920,
    super.borderFocusLight = ColorRawTokens.colorFunctionalBlack,
    super.borderFocusDark = ColorRawTokens.colorFunctionalGrayLight160,
    super.borderFocusInsetLight = ColorRawTokens.colorFunctionalWhite,
    super.borderFocusInsetDark = ColorRawTokens.colorFunctionalGrayDark880,
    super.borderBrandPrimaryLight = OrangeColorRawTokens.colorOrange550,
    super.borderBrandPrimaryDark = OrangeColorRawTokens.colorOrange500,
    super.borderBrandSecondaryLight = Color(0x00ff0000),
    super.borderBrandSecondaryDark = Color(0x00ff0000),
    super.borderBrandTertiaryLight = Color(0x00ff0000),
    super.borderBrandTertiaryDark = Color(0x00ff0000),
    super.borderStatusPositiveLight = Color(0x00ff0000),
    super.borderStatusPositiveDark = Color(0x00ff0000),
    super.borderStatusInfoLight = Color(0x00ff0000),
    super.borderStatusInfoDark = Color(0x00ff0000),
    super.borderStatusWarningLight = Color(0x00ff0000),
    super.borderStatusWarningDark = Color(0x00ff0000),
    super.borderStatusNegativeLight = Color(0x00ff0000),
    super.borderStatusNegativeDark = Color(0x00ff0000),
    super.borderStatusAccentLight = Color(0x00ff0000),
    super.borderStatusAccentDark = Color(0x00ff0000),
    super.borderOnBrandPrimaryLight = ColorRawTokens.colorFunctionalBlack,
    super.borderOnBrandPrimaryDark = ColorRawTokens.colorFunctionalBlack,
    super.borderOnBrandSecondaryLight = Color(0x00ff0000),
    super.borderOnBrandSecondaryDark = Color(0x00ff0000),
    super.borderOnBrandTertiaryLight = Color(0x00ff0000),
    super.borderOnBrandTertiaryDark = Color(0x00ff0000),
  });
}
