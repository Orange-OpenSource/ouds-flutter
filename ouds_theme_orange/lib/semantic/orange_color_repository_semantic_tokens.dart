//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 0.11.0
// Generated by Tokenator

import 'package:ouds_theme_orange/raw/orange_brand_color_raw_tokens.dart';
import 'package:ouds_theme_contract/theme/tokens/semantic/ouds_color_repository_semantic_tokens.dart';
import 'package:ouds_global_raw_tokens/color_raw_tokens.dart';
  
class OrangeColorRepositorySemanticTokens extends OudsColorRepositorySemanticTokens {
  const OrangeColorRepositorySemanticTokens({
    super.repositoryAccentDefaultLight = ColorRawTokens.colorFunctionalSun500,
    super.repositoryAccentHighestLight = OrangeBrandColorRawTokens.colorWarmGray900,
    super.repositoryAccentLowLight = ColorRawTokens.colorFunctionalSun300,
    super.repositoryAccentLowestLight = OrangeBrandColorRawTokens.colorWarmGray100,
    super.repositoryAccentDefaultDark = ColorRawTokens.colorFunctionalSun500,
    super.repositoryAccentHighestDark = OrangeBrandColorRawTokens.colorWarmGray900,
    super.repositoryAccentLowDark = ColorRawTokens.colorFunctionalSun300,
    super.repositoryAccentLowestDark = OrangeBrandColorRawTokens.colorWarmGray100,
    super.repositoryInfoDefaultLight = ColorRawTokens.colorFunctionalDodgerBlue500,
    super.repositoryInfoHighestLight = ColorRawTokens.colorFunctionalDodgerBlue900,
    super.repositoryInfoLowLight = ColorRawTokens.colorFunctionalDodgerBlue300,
    super.repositoryInfoLowestLight = ColorRawTokens.colorFunctionalDodgerBlue100,
    super.repositoryInfoDefaultDark = ColorRawTokens.colorFunctionalDodgerBlue500,
    super.repositoryInfoHighestDark = ColorRawTokens.colorFunctionalDodgerBlue900,
    super.repositoryInfoLowDark = ColorRawTokens.colorFunctionalDodgerBlue300,
    super.repositoryInfoLowestDark = ColorRawTokens.colorFunctionalDodgerBlue100,
    super.repositoryNegativeDefaultLight = ColorRawTokens.colorFunctionalScarlet600,
    super.repositoryNegativeHighLight = ColorRawTokens.colorFunctionalScarlet700,
    super.repositoryNegativeHigherLight = ColorRawTokens.colorFunctionalScarlet800,
    super.repositoryNegativeHighestLight = ColorRawTokens.colorFunctionalScarlet900,
    super.repositoryNegativeLowLight = ColorRawTokens.colorFunctionalScarlet300,
    super.repositoryNegativeLowerLight = ColorRawTokens.colorFunctionalScarlet200,
    super.repositoryNegativeLowestLight = ColorRawTokens.colorFunctionalScarlet100,
    super.repositoryNegativeDefaultDark = ColorRawTokens.colorFunctionalScarlet600,
    super.repositoryNegativeHighDark = ColorRawTokens.colorFunctionalScarlet700,
    super.repositoryNegativeHigherDark = ColorRawTokens.colorFunctionalScarlet800,
    super.repositoryNegativeHighestDark = ColorRawTokens.colorFunctionalScarlet900,
    super.repositoryNegativeLowDark = ColorRawTokens.colorFunctionalScarlet300,
    super.repositoryNegativeLowerDark = ColorRawTokens.colorFunctionalScarlet200,
    super.repositoryNegativeLowestDark = ColorRawTokens.colorFunctionalScarlet100,
    super.repositoryNeutralEmphasizedBlackLight = ColorRawTokens.colorFunctionalBlack,
    super.repositoryNeutralEmphasizedHighLight = ColorRawTokens.colorFunctionalDarkGray720,
    super.repositoryNeutralEmphasizedHigherLight = ColorRawTokens.colorFunctionalDarkGray800,
    super.repositoryNeutralEmphasizedHighestLight = ColorRawTokens.colorFunctionalDarkGray880,
    super.repositoryNeutralEmphasizedMediumLight = ColorRawTokens.colorFunctionalDarkGray640,
    super.repositoryNeutralEmphasizedBlackDark = ColorRawTokens.colorFunctionalBlack,
    super.repositoryNeutralEmphasizedHighDark = ColorRawTokens.colorFunctionalDarkGray720,
    super.repositoryNeutralEmphasizedHigherDark = ColorRawTokens.colorFunctionalDarkGray800,
    super.repositoryNeutralEmphasizedHighestDark = ColorRawTokens.colorFunctionalDarkGray880,
    super.repositoryNeutralEmphasizedMediumDark = ColorRawTokens.colorFunctionalDarkGray640,
    super.repositoryNeutralMutedLowerLight = ColorRawTokens.colorFunctionalLightGray160,
    super.repositoryNeutralMutedLowestLight = ColorRawTokens.colorFunctionalLightGray80,
    super.repositoryNeutralMutedWhiteLight = ColorRawTokens.colorFunctionalWhite,
    super.repositoryNeutralMutedLowerDark = ColorRawTokens.colorFunctionalLightGray160,
    super.repositoryNeutralMutedLowestDark = ColorRawTokens.colorFunctionalLightGray80,
    super.repositoryNeutralMutedWhiteDark = ColorRawTokens.colorFunctionalWhite,
    super.repositoryOpacityBlackHighLight = ColorRawTokens.colorOpacityBlack520,
    super.repositoryOpacityBlackHigherLight = ColorRawTokens.colorOpacityBlack680,
    super.repositoryOpacityBlackHighestLight = ColorRawTokens.colorOpacityBlack840,
    super.repositoryOpacityBlackLowLight = ColorRawTokens.colorOpacityBlack120,
    super.repositoryOpacityBlackLowerLight = ColorRawTokens.colorOpacityBlack80,
    super.repositoryOpacityBlackLowestLight = ColorRawTokens.colorOpacityBlack40,
    super.repositoryOpacityBlackMediumLight = ColorRawTokens.colorOpacityBlack280,
    super.repositoryOpacityBlackMediumHighLight = ColorRawTokens.colorOpacityBlack440,
    super.repositoryOpacityBlackMediumLowLight = ColorRawTokens.colorOpacityBlack200,
    super.repositoryOpacityBlackTransparentLight = ColorRawTokens.colorOpacityBlack0,
    super.repositoryOpacityBlackHighDark = ColorRawTokens.colorOpacityBlack520,
    super.repositoryOpacityBlackHigherDark = ColorRawTokens.colorOpacityBlack680,
    super.repositoryOpacityBlackHighestDark = ColorRawTokens.colorOpacityBlack840,
    super.repositoryOpacityBlackLowDark = ColorRawTokens.colorOpacityBlack120,
    super.repositoryOpacityBlackLowerDark = ColorRawTokens.colorOpacityBlack80,
    super.repositoryOpacityBlackLowestDark = ColorRawTokens.colorOpacityBlack40,
    super.repositoryOpacityBlackMediumDark = ColorRawTokens.colorOpacityBlack280,
    super.repositoryOpacityBlackMediumHighDark = ColorRawTokens.colorOpacityBlack440,
    super.repositoryOpacityBlackMediumLowDark = ColorRawTokens.colorOpacityBlack200,
    super.repositoryOpacityBlackTransparentDark = ColorRawTokens.colorOpacityBlack0,
    super.repositoryOpacityInfoLight = ColorRawTokens.colorOpacityDodgerBlue,
    super.repositoryOpacityNegativeLight = ColorRawTokens.colorOpacityScarlet,
    super.repositoryOpacityPositiveLight = ColorRawTokens.colorOpacityMalachite,
    super.repositoryOpacityWarningLight = ColorRawTokens.colorOpacitySun,
    super.repositoryOpacityWhiteHighLight = ColorRawTokens.colorOpacityWhite640,
    super.repositoryOpacityWhiteHigherLight = ColorRawTokens.colorOpacityWhite800,
    super.repositoryOpacityWhiteHighestLight = ColorRawTokens.colorOpacityWhite920,
    super.repositoryOpacityWhiteLowLight = ColorRawTokens.colorOpacityWhite120,
    super.repositoryOpacityWhiteLowerLight = ColorRawTokens.colorOpacityWhite80,
    super.repositoryOpacityWhiteLowestLight = ColorRawTokens.colorOpacityWhite40,
    super.repositoryOpacityWhiteMediumLight = ColorRawTokens.colorOpacityWhite560,
    super.repositoryOpacityWhiteMediumLowLight = ColorRawTokens.colorOpacityWhite200,
    super.repositoryOpacityWhiteTransparentLight = ColorRawTokens.colorOpacityWhite0,
    super.repositoryOpacityWhiteHighDark = ColorRawTokens.colorOpacityWhite640,
    super.repositoryOpacityWhiteHigherDark = ColorRawTokens.colorOpacityWhite800,
    super.repositoryOpacityWhiteHighestDark = ColorRawTokens.colorOpacityWhite920,
    super.repositoryOpacityWhiteLowDark = ColorRawTokens.colorOpacityWhite120,
    super.repositoryOpacityWhiteLowerDark = ColorRawTokens.colorOpacityWhite80,
    super.repositoryOpacityWhiteLowestDark = ColorRawTokens.colorOpacityWhite40,
    super.repositoryOpacityWhiteMediumDark = ColorRawTokens.colorOpacityWhite560,
    super.repositoryOpacityWhiteMediumLowDark = ColorRawTokens.colorOpacityWhite200,
    super.repositoryOpacityWhiteTransparentDark = ColorRawTokens.colorOpacityWhite0,
    super.repositoryOpacityInfoDark = ColorRawTokens.colorOpacityDodgerBlue,
    super.repositoryOpacityNegativeDark = ColorRawTokens.colorOpacityScarlet,
    super.repositoryOpacityPositiveDark = ColorRawTokens.colorOpacityMalachite,
    super.repositoryOpacityWarningDark = ColorRawTokens.colorOpacitySun,
    super.repositoryPositiveDefaultLight = ColorRawTokens.colorFunctionalMalachite500,
    super.repositoryPositiveHighLight = ColorRawTokens.colorFunctionalMalachite600,
    super.repositoryPositiveHighestLight = ColorRawTokens.colorFunctionalMalachite900,
    super.repositoryPositiveLowLight = ColorRawTokens.colorFunctionalMalachite300,
    super.repositoryPositiveLowestLight = ColorRawTokens.colorFunctionalMalachite100,
    super.repositoryPositiveDefaultDark = ColorRawTokens.colorFunctionalMalachite500,
    super.repositoryPositiveHighDark = ColorRawTokens.colorFunctionalMalachite600,
    super.repositoryPositiveHighestDark = ColorRawTokens.colorFunctionalMalachite900,
    super.repositoryPositiveLowDark = ColorRawTokens.colorFunctionalMalachite300,
    super.repositoryPositiveLowestDark = ColorRawTokens.colorFunctionalMalachite100,
    super.repositoryPrimaryDefaultLight = OrangeBrandColorRawTokens.colorOrange550,
    super.repositoryPrimaryLowLight = OrangeBrandColorRawTokens.colorOrange500,
    super.repositoryPrimaryDefaultDark = OrangeBrandColorRawTokens.colorOrange550,
    super.repositoryPrimaryLowDark = OrangeBrandColorRawTokens.colorOrange500,
    super.repositoryWarningDefaultLight = ColorRawTokens.colorFunctionalSun500,
    super.repositoryWarningHighestLight = ColorRawTokens.colorFunctionalSun900,
    super.repositoryWarningLowLight = ColorRawTokens.colorFunctionalSun300,
    super.repositoryWarningLowestLight = ColorRawTokens.colorFunctionalSun100,
    super.repositoryWarningDefaultDark = ColorRawTokens.colorFunctionalSun500,
    super.repositoryWarningHighestDark = ColorRawTokens.colorFunctionalSun900,
    super.repositoryWarningLowDark = ColorRawTokens.colorFunctionalSun300,
    super.repositoryWarningLowestDark = ColorRawTokens.colorFunctionalSun100,
  });
}
