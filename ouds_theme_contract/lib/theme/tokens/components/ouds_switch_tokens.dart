//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

import 'package:flutter/material.dart';
import 'package:ouds_theme_contract/ouds_tokens_provider.dart';
import 'package:ouds_global_raw_tokens/color_raw_tokens.dart';
import 'package:ouds_global_raw_tokens/dimension_raw_tokens.dart';

class OudsSwitchTokens {
  final Color colorCursorLight;
  final Color colorCursorDark;
  final Color colorCheck;
  final Color colorCheckInteraction;
  final Color colorTrackSelectedLight;
  final Color colorTrackSelectedDark;
  final Color colorTrackSelectedInteractionLight;
  final Color colorTrackSelectedInteractionDark;
  final Color colorTrackUnselectedLight;
  final Color colorTrackUnselectedDark;
  final Color colorTrackUnselectedInteractionLight;
  final Color colorTrackUnselectedInteractionDark;
  final double borderRadiusCursor;
  final double borderRadiusTrack;
  final double opacityCheck;
  final double spacePaddingInlineSelected;
  final double spacePaddingInlineUnselected;
  final double sizeMinWidth;
  final double sizeMinHeight;
  final double sizeMinHeightInteractiveArea;
  final double sizeMaxHeight;
  final double sizeWidthCursorSelected;
  final double sizeWidthCursorUnselected;
  final double sizeWidthCursorSelectedPressed;
  final double sizeWidthCursorUnselectedPressed;
  final double sizeWidthTrack;
  final double sizeHeightCursorSelected;
  final double sizeHeightCursorUnselected;
  final double sizeHeightTrack;

  OudsSwitchTokens({
    required OudsProvidersTokens providersTokens,
    Color? colorCursorLight,
    Color? colorCursorDark,
    Color? colorCheck,
    Color? colorCheckInteraction,
    Color? colorTrackSelectedLight,
    Color? colorTrackSelectedDark,
    Color? colorTrackSelectedInteractionLight,
    Color? colorTrackSelectedInteractionDark,
    Color? colorTrackUnselectedLight,
    Color? colorTrackUnselectedDark,
    Color? colorTrackUnselectedInteractionLight,
    Color? colorTrackUnselectedInteractionDark,
    double? borderRadiusCursor,
    double? borderRadiusTrack,
    double? opacityCheck,
    double? spacePaddingInlineSelected,
    double? spacePaddingInlineUnselected,
    double? sizeMinWidth,
    double? sizeMinHeight,
    double? sizeMinHeightInteractiveArea,
    double? sizeMaxHeight,
    double? sizeWidthCursorSelected,
    double? sizeWidthCursorUnselected,
    double? sizeWidthCursorSelectedPressed,
    double? sizeWidthCursorUnselectedPressed,
    double? sizeWidthTrack,
    double? sizeHeightCursorSelected,
    double? sizeHeightCursorUnselected,
    double? sizeHeightTrack
  }) :
    colorCursorLight = colorCursorLight ?? ColorRawTokens.colorFunctionalWhite,
    colorCursorDark = colorCursorDark ?? ColorRawTokens.colorFunctionalGrayDark880,
    colorCheck = colorCheck ?? providersTokens.colorScheme.contentDefault,
    colorCheckInteraction = colorCheckInteraction ?? providersTokens.colorScheme.contentDefault,
    colorTrackSelectedLight = colorTrackSelectedLight ?? ColorRawTokens.colorFunctionalMalachite500,
    colorTrackSelectedDark = colorTrackSelectedDark ?? ColorRawTokens.colorFunctionalMalachite600,
    colorTrackSelectedInteractionLight = colorTrackSelectedInteractionLight ?? ColorRawTokens.colorFunctionalMalachite600,
    colorTrackSelectedInteractionDark = colorTrackSelectedInteractionDark ?? ColorRawTokens.colorFunctionalMalachite300,
    colorTrackUnselectedLight = colorTrackUnselectedLight ?? ColorRawTokens.colorOpacityBlack440,
    colorTrackUnselectedDark = colorTrackUnselectedDark ?? ColorRawTokens.colorOpacityWhite640,
    colorTrackUnselectedInteractionLight = colorTrackUnselectedInteractionLight ?? ColorRawTokens.colorOpacityBlack520,
    colorTrackUnselectedInteractionDark = colorTrackUnselectedInteractionDark ?? ColorRawTokens.colorOpacityWhite800,
    borderRadiusCursor = borderRadiusCursor ?? providersTokens.borderTokens.radiusPill,
    borderRadiusTrack = borderRadiusTrack ?? providersTokens.borderTokens.radiusPill,
    opacityCheck = opacityCheck ?? providersTokens.opacityTokens.opaque,
    spacePaddingInlineSelected = spacePaddingInlineSelected ?? providersTokens.spaceTokens.paddingInline3xs,
    spacePaddingInlineUnselected = spacePaddingInlineUnselected ?? providersTokens.spaceTokens.paddingInlineXs,
    sizeMinWidth = sizeMinWidth ?? DimensionRawTokens.dimension700,
    sizeMinHeight = sizeMinHeight ?? DimensionRawTokens.dimension400,
    sizeMinHeightInteractiveArea = sizeMinHeightInteractiveArea ?? providersTokens.sizeTokens.minInteractiveArea,
    sizeMaxHeight = sizeMaxHeight ?? DimensionRawTokens.dimension400,
    sizeWidthCursorSelected = sizeWidthCursorSelected ?? DimensionRawTokens.dimension300,
    sizeWidthCursorUnselected = sizeWidthCursorUnselected ?? DimensionRawTokens.dimension200,
    sizeWidthCursorSelectedPressed = sizeWidthCursorSelectedPressed ?? DimensionRawTokens.dimension400,
    sizeWidthCursorUnselectedPressed = sizeWidthCursorUnselectedPressed ?? DimensionRawTokens.dimension300,
    sizeWidthTrack = sizeWidthTrack ?? DimensionRawTokens.dimension700,
    sizeHeightCursorSelected = sizeHeightCursorSelected ?? DimensionRawTokens.dimension300,
    sizeHeightCursorUnselected = sizeHeightCursorUnselected ?? DimensionRawTokens.dimension200,
    sizeHeightTrack = sizeHeightTrack ?? DimensionRawTokens.dimension400;
}
