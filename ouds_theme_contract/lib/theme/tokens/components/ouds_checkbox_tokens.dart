//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

import 'package:ouds_theme_contract/ouds_tokens_provider.dart';

class OudsCheckboxTokens {
  final double borderRadius;
  final double borderWidthSelected;
  final double borderWidthSelectedHover;
  final double borderWidthSelectedPressed;
  final double borderWidthSelectedFocus;
  final double borderWidthUnselected;
  final double borderWidthUnselectedHover;
  final double borderWidthUnselectedPressed;
  final double borderWidthUnselectedFocus;
  final double sizeIndicator;
  final double sizeMinHeight;
  final double sizeMinWidth;
  final double sizeMaxHeight;

  OudsCheckboxTokens({
    required OudsProvidersTokens providersTokens,
    double? borderRadius,
    double? borderWidthSelected,
    double? borderWidthSelectedHover,
    double? borderWidthSelectedPressed,
    double? borderWidthSelectedFocus,
    double? borderWidthUnselected,
    double? borderWidthUnselectedHover,
    double? borderWidthUnselectedPressed,
    double? borderWidthUnselectedFocus,
    double? sizeIndicator,
    double? sizeMinHeight,
    double? sizeMinWidth,
    double? sizeMaxHeight
  }) :
    borderRadius = borderRadius ?? providersTokens.borderTokens.radiusDefault,
    borderWidthSelected = borderWidthSelected ?? providersTokens.borderTokens.widthMedium,
    borderWidthSelectedHover = borderWidthSelectedHover ?? providersTokens.borderTokens.widthMedium,
    borderWidthSelectedPressed = borderWidthSelectedPressed ?? providersTokens.borderTokens.widthMedium,
    borderWidthSelectedFocus = borderWidthSelectedFocus ?? providersTokens.borderTokens.widthMedium,
    borderWidthUnselected = borderWidthUnselected ?? providersTokens.borderTokens.widthThin,
    borderWidthUnselectedHover = borderWidthUnselectedHover ?? providersTokens.borderTokens.widthMedium,
    borderWidthUnselectedPressed = borderWidthUnselectedPressed ?? providersTokens.borderTokens.widthMedium,
    borderWidthUnselectedFocus = borderWidthUnselectedFocus ?? providersTokens.borderTokens.widthMedium,
    sizeIndicator = sizeIndicator ?? providersTokens.sizeTokens.iconWithLabelLargeSizeXs,
    sizeMinHeight = sizeMinHeight ?? providersTokens.sizeTokens.minInteractiveArea,
    sizeMinWidth = sizeMinWidth ?? providersTokens.sizeTokens.minInteractiveArea,
    sizeMaxHeight = sizeMaxHeight ?? providersTokens.sizeTokens.minInteractiveArea;
}
