//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

import 'package:flutter/material.dart';
import 'package:ouds_theme_contract/ouds_tokens_provider.dart';
import 'package:ouds_global_raw_tokens/dimension_raw_tokens.dart';

class OudsControlItemTokens {
  final Color colorBgHover;
  final Color colorBgPressed;
  final Color colorBgLoading;
  final Color colorBgFocus;
  final Color colorContentLoader;
  final double borderRadius;
  final double borderRadiusItemOnly;
  final double spaceInset;
  final double spaceColumnGap;
  final double spaceRowGap;
  final double sizeIcon;
  final double sizeLoader;
  final double sizeMinHeight;
  final double sizeMaxHeightAssetsContainer;
  final double sizeMinWidth;
  final double sizeListItemSizeMinHeightText;

  OudsControlItemTokens({
    required OudsProvidersTokens providersTokens,
    Color? colorBgHover,
    Color? colorBgPressed,
    Color? colorBgLoading,
    Color? colorBgFocus,
    Color? colorContentLoader,
    double? borderRadius,
    double? borderRadiusItemOnly,
    double? spaceInset,
    double? spaceColumnGap,
    double? spaceRowGap,
    double? sizeIcon,
    double? sizeLoader,
    double? sizeMinHeight,
    double? sizeMaxHeightAssetsContainer,
    double? sizeMinWidth,
    double? sizeListItemSizeMinHeightText
  }) :
    colorBgHover = colorBgHover ?? providersTokens.colorScheme.actionSupportHover,
    colorBgPressed = colorBgPressed ?? providersTokens.colorScheme.actionSupportPressed,
    colorBgLoading = colorBgLoading ?? providersTokens.colorScheme.actionSupportLoading,
    colorBgFocus = colorBgFocus ?? providersTokens.colorScheme.actionSupportFocus,
    colorContentLoader = colorContentLoader ?? providersTokens.colorScheme.contentDefault,
    borderRadius = borderRadius ?? providersTokens.borderTokens.radiusNone,
    borderRadiusItemOnly = borderRadiusItemOnly ?? providersTokens.borderTokens.radiusDefault,
    spaceInset = spaceInset ?? providersTokens.spaceTokens.insetMd,
    spaceColumnGap = spaceColumnGap ?? providersTokens.spaceTokens.columnGapLg,
    spaceRowGap = spaceRowGap ?? providersTokens.spaceTokens.rowGapNone,
    sizeIcon = sizeIcon ?? providersTokens.sizeTokens.iconWithLabelLargeSizeMd,
    sizeLoader = sizeLoader ?? providersTokens.sizeTokens.iconWithLabelLargeSizeSm,
    sizeMinHeight = sizeMinHeight ?? DimensionRawTokens.dimension650,
    sizeMaxHeightAssetsContainer = sizeMaxHeightAssetsContainer ?? DimensionRawTokens.dimension1200,
    sizeMinWidth = sizeMinWidth ?? DimensionRawTokens.dimension2000,
    sizeListItemSizeMinHeightText = sizeListItemSizeMinHeightText ?? providersTokens.sizeTokens.iconWithLabelLargeSizeMd;
}
