//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

import 'package:flutter/material.dart';
import 'package:ouds_theme_contract/ouds_tokens_provider.dart';

class OudsButtonTokens {
  final Color colorBgDefaultEnabled;
  final Color colorBgDefaultHover;
  final Color colorBgDefaultPressed;
  final Color colorBgDefaultLoading;
  final Color colorBgDefaultDisabled;
  final Color colorBgDefaultFocus;
  final Color colorBgMinimalEnabled;
  final Color colorBgMinimalHover;
  final Color colorBgMinimalPressed;
  final Color colorBgMinimalLoading;
  final Color colorBgMinimalDisabled;
  final Color colorBgMinimalFocus;
  final Color colorContentDefaultEnabled;
  final Color colorContentDefaultHover;
  final Color colorContentDefaultPressed;
  final Color colorContentDefaultLoading;
  final Color colorContentDefaultDisabled;
  final Color colorContentDefaultFocus;
  final Color colorContentMinimalEnabled;
  final Color colorContentMinimalHover;
  final Color colorContentMinimalPressed;
  final Color colorContentMinimalLoading;
  final Color colorContentMinimalDisabled;
  final Color colorContentMinimalFocus;
  final Color colorBorderDefaultEnabled;
  final Color colorBorderDefaultHover;
  final Color colorBorderDefaultPressed;
  final Color colorBorderDefaultLoading;
  final Color colorBorderDefaultDisabled;
  final Color colorBorderDefaultFocus;
  final Color colorBorderMinimalEnabled;
  final Color colorBorderMinimalHover;
  final Color colorBorderMinimalPressed;
  final Color colorBorderMinimalLoading;
  final Color colorBorderMinimalDisabled;
  final Color colorBorderMinimalFocus;
  final double borderRadius;
  final double borderWidthDefault;
  final double borderWidthDefaultInteraction;
  final double borderWidthDefaultInteractionMono;
  final double borderWidthMinimal;
  final double borderWidthMinimalInteraction;
  final double spaceInsetIconOnly;
  final double spacePaddingBlock;
  final double spacePaddingInlineStartIconEnd;
  final double spacePaddingInlineEndIconStart;
  final double spacePaddingInlineIconNone;
  final double spacePaddingInlineIconStart;
  final double spacePaddingInlineArrowStart;
  final double spacePaddingInlineArrowEnd;
  final double spaceColumnGapIcon;
  final double spaceColumnGapArrow;
  final double sizeIcon;
  final double sizeIconOnly;
  final double sizeLoader;
  final double sizeMinHeight;
  final double sizeMinWidth;
  final double sizeMaxHeightIconOnly;

  OudsButtonTokens({
    required OudsProvidersTokens providersTokens,
    Color? colorBgDefaultEnabled,
    Color? colorBgDefaultHover,
    Color? colorBgDefaultPressed,
    Color? colorBgDefaultLoading,
    Color? colorBgDefaultDisabled,
    Color? colorBgDefaultFocus,
    Color? colorBgMinimalEnabled,
    Color? colorBgMinimalHover,
    Color? colorBgMinimalPressed,
    Color? colorBgMinimalLoading,
    Color? colorBgMinimalDisabled,
    Color? colorBgMinimalFocus,
    Color? colorContentDefaultEnabled,
    Color? colorContentDefaultHover,
    Color? colorContentDefaultPressed,
    Color? colorContentDefaultLoading,
    Color? colorContentDefaultDisabled,
    Color? colorContentDefaultFocus,
    Color? colorContentMinimalEnabled,
    Color? colorContentMinimalHover,
    Color? colorContentMinimalPressed,
    Color? colorContentMinimalLoading,
    Color? colorContentMinimalDisabled,
    Color? colorContentMinimalFocus,
    Color? colorBorderDefaultEnabled,
    Color? colorBorderDefaultHover,
    Color? colorBorderDefaultPressed,
    Color? colorBorderDefaultLoading,
    Color? colorBorderDefaultDisabled,
    Color? colorBorderDefaultFocus,
    Color? colorBorderMinimalEnabled,
    Color? colorBorderMinimalHover,
    Color? colorBorderMinimalPressed,
    Color? colorBorderMinimalLoading,
    Color? colorBorderMinimalDisabled,
    Color? colorBorderMinimalFocus,
    double? borderRadius,
    double? borderWidthDefault,
    double? borderWidthDefaultInteraction,
    double? borderWidthDefaultInteractionMono,
    double? borderWidthMinimal,
    double? borderWidthMinimalInteraction,
    double? spaceInsetIconOnly,
    double? spacePaddingBlock,
    double? spacePaddingInlineStartIconEnd,
    double? spacePaddingInlineEndIconStart,
    double? spacePaddingInlineIconNone,
    double? spacePaddingInlineIconStart,
    double? spacePaddingInlineArrowStart,
    double? spacePaddingInlineArrowEnd,
    double? spaceColumnGapIcon,
    double? spaceColumnGapArrow,
    double? sizeIcon,
    double? sizeIconOnly,
    double? sizeLoader,
    double? sizeMinHeight,
    double? sizeMinWidth,
    double? sizeMaxHeightIconOnly
  }) :
    colorBgDefaultEnabled = colorBgDefaultEnabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgDefaultHover = colorBgDefaultHover ?? providersTokens.colorScheme.opacityTransparent,
    colorBgDefaultPressed = colorBgDefaultPressed ?? providersTokens.colorScheme.opacityTransparent,
    colorBgDefaultLoading = colorBgDefaultLoading ?? providersTokens.colorScheme.opacityTransparent,
    colorBgDefaultDisabled = colorBgDefaultDisabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgDefaultFocus = colorBgDefaultFocus ?? providersTokens.colorScheme.opacityTransparent,
    colorBgMinimalEnabled = colorBgMinimalEnabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgMinimalHover = colorBgMinimalHover ?? providersTokens.colorScheme.actionSupportHover,
    colorBgMinimalPressed = colorBgMinimalPressed ?? providersTokens.colorScheme.actionSupportPressed,
    colorBgMinimalLoading = colorBgMinimalLoading ?? providersTokens.colorScheme.actionSupportLoading,
    colorBgMinimalDisabled = colorBgMinimalDisabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgMinimalFocus = colorBgMinimalFocus ?? providersTokens.colorScheme.actionSupportFocus,
    colorContentDefaultEnabled = colorContentDefaultEnabled ?? providersTokens.colorScheme.actionEnabled,
    colorContentDefaultHover = colorContentDefaultHover ?? providersTokens.colorScheme.actionHover,
    colorContentDefaultPressed = colorContentDefaultPressed ?? providersTokens.colorScheme.actionPressed,
    colorContentDefaultLoading = colorContentDefaultLoading ?? providersTokens.colorScheme.actionLoading,
    colorContentDefaultDisabled = colorContentDefaultDisabled ?? providersTokens.colorScheme.actionDisabled,
    colorContentDefaultFocus = colorContentDefaultFocus ?? providersTokens.colorScheme.actionFocus,
    colorContentMinimalEnabled = colorContentMinimalEnabled ?? providersTokens.colorScheme.actionEnabled,
    colorContentMinimalHover = colorContentMinimalHover ?? providersTokens.colorScheme.actionHover,
    colorContentMinimalPressed = colorContentMinimalPressed ?? providersTokens.colorScheme.actionPressed,
    colorContentMinimalLoading = colorContentMinimalLoading ?? providersTokens.colorScheme.contentDefault,
    colorContentMinimalDisabled = colorContentMinimalDisabled ?? providersTokens.colorScheme.actionDisabled,
    colorContentMinimalFocus = colorContentMinimalFocus ?? providersTokens.colorScheme.actionFocus,
    colorBorderDefaultEnabled = colorBorderDefaultEnabled ?? providersTokens.colorScheme.actionEnabled,
    colorBorderDefaultHover = colorBorderDefaultHover ?? providersTokens.colorScheme.actionHover,
    colorBorderDefaultPressed = colorBorderDefaultPressed ?? providersTokens.colorScheme.actionPressed,
    colorBorderDefaultLoading = colorBorderDefaultLoading ?? providersTokens.colorScheme.actionLoading,
    colorBorderDefaultDisabled = colorBorderDefaultDisabled ?? providersTokens.colorScheme.actionDisabled,
    colorBorderDefaultFocus = colorBorderDefaultFocus ?? providersTokens.colorScheme.actionFocus,
    colorBorderMinimalEnabled = colorBorderMinimalEnabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderMinimalHover = colorBorderMinimalHover ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderMinimalPressed = colorBorderMinimalPressed ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderMinimalLoading = colorBorderMinimalLoading ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderMinimalDisabled = colorBorderMinimalDisabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderMinimalFocus = colorBorderMinimalFocus ?? providersTokens.colorScheme.opacityTransparent,
    borderRadius = borderRadius ?? providersTokens.borderTokens.radiusDefault,
    borderWidthDefault = borderWidthDefault ?? providersTokens.borderTokens.widthDefault,
    borderWidthDefaultInteraction = borderWidthDefaultInteraction ?? providersTokens.borderTokens.widthMedium,
    borderWidthDefaultInteractionMono = borderWidthDefaultInteractionMono ?? providersTokens.borderTokens.widthNone,
    borderWidthMinimal = borderWidthMinimal ?? providersTokens.borderTokens.widthNone,
    borderWidthMinimalInteraction = borderWidthMinimalInteraction ?? providersTokens.borderTokens.widthNone,
    spaceInsetIconOnly = spaceInsetIconOnly ?? providersTokens.spaceTokens.insetMd,
    spacePaddingBlock = spacePaddingBlock ?? providersTokens.spaceTokens.paddingBlockMd,
    spacePaddingInlineStartIconEnd = spacePaddingInlineStartIconEnd ?? providersTokens.spaceTokens.paddingInline3xl,
    spacePaddingInlineEndIconStart = spacePaddingInlineEndIconStart ?? providersTokens.spaceTokens.paddingInline3xl,
    spacePaddingInlineIconNone = spacePaddingInlineIconNone ?? providersTokens.spaceTokens.paddingInline4xl,
    spacePaddingInlineIconStart = spacePaddingInlineIconStart ?? providersTokens.spaceTokens.paddingInlineXl,
    spacePaddingInlineArrowStart = spacePaddingInlineArrowStart ?? providersTokens.spaceTokens.paddingInlineLg,
    spacePaddingInlineArrowEnd = spacePaddingInlineArrowEnd ?? providersTokens.spaceTokens.paddingInlineLg,
    spaceColumnGapIcon = spaceColumnGapIcon ?? providersTokens.spaceTokens.columnGapSm,
    spaceColumnGapArrow = spaceColumnGapArrow ?? providersTokens.spaceTokens.columnGapXs,
    sizeIcon = sizeIcon ?? providersTokens.sizeTokens.iconWithLabelLargeSizeXs,
    sizeIconOnly = sizeIconOnly ?? providersTokens.sizeTokens.iconWithLabelLargeSizeSm,
    sizeLoader = sizeLoader ?? providersTokens.sizeTokens.iconWithLabelLargeSizeXs,
    sizeMinHeight = sizeMinHeight ?? providersTokens.sizeTokens.minInteractiveArea,
    sizeMinWidth = sizeMinWidth ?? providersTokens.sizeTokens.minInteractiveArea,
    sizeMaxHeightIconOnly = sizeMaxHeightIconOnly ?? providersTokens.sizeTokens.minInteractiveArea;
}
