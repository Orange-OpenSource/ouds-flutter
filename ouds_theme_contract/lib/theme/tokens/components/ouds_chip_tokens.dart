//
// Software Name: OUDS Flutter
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Flutter library of reusable graphical components
//

// Tokens version 0.11.0
// Generated by Tokenator

import 'package:flutter/material.dart';
import 'package:ouds_theme_contract/ouds_tokens_provider.dart';
import 'package:ouds_global_raw_tokens/dimension_raw_tokens.dart';

class OudsChipTokens {
  final double borderRadiusPill;
  final double borderWidthDefault;
  final double borderWidthDefaultInteraction;
  final double borderWidthSelected;
  final double borderWidthSelectedInteraction;
  final double borderWidthUnselected;
  final double borderWidthUnselectedInteraction;
  final Color colorBgDisabled;
  final Color colorBgEnabled;
  final Color colorBgFocus;
  final Color colorBgHover;
  final Color colorBgPressed;
  final Color colorBorderDisabled;
  final Color colorBorderFocus;
  final Color colorBorderHover;
  final Color colorBorderPressed;
  final Color colorBorderSelected;
  final Color colorBorderUnselected;
  final Color colorContentDisabled;
  final Color colorContentEnabled;
  final Color colorContentFocus;
  final Color colorContentHover;
  final Color colorContentPressed;
  final double sizeIcon;
  final double sizeMinHeight;
  final double sizeMinWidth;
  final double spaceColumnGapColumnGap;
  final double spaceInsetIconOnly;
  final double spacePaddingBlock;
  final double spacePaddingInlineIconEnd;
  final double spacePaddingInlineIconNone;
  final double spacePaddingInlineIconOnly;
  final double spacePaddingInlineIconStart;
  final double spacePaddingInlineLabelEnd;
  final double spacePaddingInlineLabelStart;

  OudsChipTokens({
    required OudsProvidersTokens providersTokens,
    double? borderRadiusPill,
    double? borderWidthDefault,
    double? borderWidthDefaultInteraction,
    double? borderWidthSelected,
    double? borderWidthSelectedInteraction,
    double? borderWidthUnselected,
    double? borderWidthUnselectedInteraction,
    Color? colorBgDisabled,
    Color? colorBgEnabled,
    Color? colorBgFocus,
    Color? colorBgHover,
    Color? colorBgPressed,
    Color? colorBorderDisabled,
    Color? colorBorderFocus,
    Color? colorBorderHover,
    Color? colorBorderPressed,
    Color? colorBorderSelected,
    Color? colorBorderUnselected,
    Color? colorContentDisabled,
    Color? colorContentEnabled,
    Color? colorContentFocus,
    Color? colorContentHover,
    Color? colorContentPressed,
    double? sizeIcon,
    double? sizeMinHeight,
    double? sizeMinWidth,
    double? spaceColumnGapColumnGap,
    double? spaceInsetIconOnly,
    double? spacePaddingBlock,
    double? spacePaddingInlineIconEnd,
    double? spacePaddingInlineIconNone,
    double? spacePaddingInlineIconOnly,
    double? spacePaddingInlineIconStart,
    double? spacePaddingInlineLabelEnd,
    double? spacePaddingInlineLabelStart
  }) :
    borderRadiusPill = borderRadiusPill ?? providersTokens.borderTokens.radiusPill,
    borderWidthDefault = borderWidthDefault ?? providersTokens.borderTokens.widthDefault,
    borderWidthDefaultInteraction = borderWidthDefaultInteraction ?? providersTokens.borderTokens.widthMedium,
    borderWidthSelected = borderWidthSelected ?? providersTokens.borderTokens.widthMedium,
    borderWidthSelectedInteraction = borderWidthSelectedInteraction ?? providersTokens.borderTokens.widthMedium,
    borderWidthUnselected = borderWidthUnselected ?? providersTokens.borderTokens.widthDefault,
    borderWidthUnselectedInteraction = borderWidthUnselectedInteraction ?? providersTokens.borderTokens.widthMedium,
    colorBgDisabled = colorBgDisabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgEnabled = colorBgEnabled ?? providersTokens.colorScheme.opacityTransparent,
    colorBgFocus = colorBgFocus ?? providersTokens.colorScheme.opacityTransparent,
    colorBgHover = colorBgHover ?? providersTokens.colorScheme.opacityTransparent,
    colorBgPressed = colorBgPressed ?? providersTokens.colorScheme.opacityTransparent,
    colorBorderDisabled = colorBorderDisabled ?? providersTokens.colorScheme.actionDisabled,
    colorBorderFocus = colorBorderFocus ?? providersTokens.colorScheme.actionFocus,
    colorBorderHover = colorBorderHover ?? providersTokens.colorScheme.actionHover,
    colorBorderPressed = colorBorderPressed ?? providersTokens.colorScheme.actionPressed,
    colorBorderSelected = colorBorderSelected ?? providersTokens.colorScheme.actionSelected,
    colorBorderUnselected = colorBorderUnselected ?? providersTokens.colorScheme.borderDefault,
    colorContentDisabled = colorContentDisabled ?? providersTokens.colorScheme.actionDisabled,
    colorContentEnabled = colorContentEnabled ?? providersTokens.colorScheme.actionEnabled,
    colorContentFocus = colorContentFocus ?? providersTokens.colorScheme.actionFocus,
    colorContentHover = colorContentHover ?? providersTokens.colorScheme.actionHover,
    colorContentPressed = colorContentPressed ?? providersTokens.colorScheme.actionPressed,
    sizeIcon = sizeIcon ?? providersTokens.sizeTokens.iconWithLabelMediumSizeSm,
    sizeMinHeight = sizeMinHeight ?? DimensionRawTokens.dimension400,
    sizeMinWidth = sizeMinWidth ?? DimensionRawTokens.dimension600,
    spaceColumnGapColumnGap = spaceColumnGapColumnGap ?? providersTokens.spaceTokens.columnGapShorter,
    spaceInsetIconOnly = spaceInsetIconOnly ?? providersTokens.spaceTokens.insetMedium,
    spacePaddingBlock = spacePaddingBlock ?? providersTokens.spaceTokens.paddingBlockShorter,
    spacePaddingInlineIconEnd = spacePaddingInlineIconEnd ?? providersTokens.spaceTokens.paddingInlineMedium,
    spacePaddingInlineIconNone = spacePaddingInlineIconNone ?? providersTokens.spaceTokens.paddingInlineTall,
    spacePaddingInlineIconOnly = spacePaddingInlineIconOnly ?? providersTokens.spaceTokens.paddingInlineMedium,
    spacePaddingInlineIconStart = spacePaddingInlineIconStart ?? providersTokens.spaceTokens.paddingInlineMedium,
    spacePaddingInlineLabelEnd = spacePaddingInlineLabelEnd ?? providersTokens.spaceTokens.paddingInlineTall,
    spacePaddingInlineLabelStart = spacePaddingInlineLabelStart ?? providersTokens.spaceTokens.paddingInlineTall;
}
